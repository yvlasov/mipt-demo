name: Deploy

on:
  push:
    tags:
      - 'v*.*.*'  # Matches version tags like v1.0.0

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'
      - name: Install dependencies
        run: pip install -r requirements.txt
      - name: Deploy
        run: |
          echo "Deploying release version ${{ github.ref_name }}"
          echo "Preparing SERVER_SSH_KEY..."
          export SSH_REMOTE_HOST="vpn-ru.pytn.ru"
          mkdir -p ~/.ssh
          echo ${SERVER_SSH_KEY} | base64 -d > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan ${SSH_REMOTE_HOST} >> ~/.ssh/known_hosts
          echo "Deploying..."
          export SSH_REMOTE_SUDO_COMMAND="ssh -i ~/.ssh/id_rsa yurivlasov@${SSH_REMOTE_HOST} sudo -u root"
          echo "Deploing to remote host SSH_REMOTE_SUDO_COMMAND=${SSH_REMOTE_SUDO_COMMAND}..."
          ${SSH_REMOTE_SUDO_COMMAND} docker login -u "gitlab-ci-token" -p "${PROJECT_DEPLOY_TOKEN}" ${CI_REGISTRY}
          ${SSH_REMOTE_SUDO_COMMAND} docker pull $CI_REGISTRY_IMAGE:github-version
          ${SSH_REMOTE_SUDO_COMMAND} docker stop gitlab-demo
          ${SSH_REMOTE_SUDO_COMMAND} docker run -d --rm --name gitlab-demo -p 8080:8080 -e APP_VER=${{ github.ref_name }} ${CI_REGISTRY_IMAGE}:github-version
        env:
          SERVER_SSH_KEY: ${{ secrets.SERVER_SSH_KEY }}